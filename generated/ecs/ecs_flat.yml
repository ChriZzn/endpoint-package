'@timestamp':
  description: 'Date/time when the event originated.

    This is the date/time extracted from the event, typically representing when the
    event was generated by the source.

    If the event source has no original timestamp, this value is typically populated
    by the first time the event was received by the pipeline.

    Required field for all events.'
  type: date
agent.ephemeral_id:
  description: 'Ephemeral identifier of this agent (if one exists).

    This id normally changes across restarts, but `agent.id` does not.'
  type: keyword
agent.id:
  description: 'Unique identifier of this agent (if one exists).

    Example: For Beats this would be beat.id.'
  type: keyword
agent.name:
  description: 'Custom name of the agent.

    This is a name that can be given to an agent. This can be helpful if for example
    two Filebeat instances are running on the same host but a human readable separation
    is needed on which Filebeat instance data is coming from.

    If no name is given, the name is often left empty.'
  type: keyword
agent.type:
  description: 'Type of the agent.

    The agent type stays always the same and should be given by the agent used. In
    case of Filebeat the agent would always be Filebeat also if two Filebeat instances
    are run on the same machine.'
  type: keyword
agent.version:
  description: Version of the agent.
  type: keyword
dll.code_signature.exists:
  description: Boolean to capture if a signature is present.
  type: boolean
dll.code_signature.status:
  description: 'Additional information about the certificate status.

    This is useful for logging cryptographic errors with the certificate validity
    or trust status. Leave unpopulated if the validity or trust of the certificate
    was unchecked.'
  type: keyword
dll.code_signature.subject_name:
  description: Subject name of the code signer
  type: keyword
dll.code_signature.trusted:
  description: 'Stores the trust status of the certificate chain.

    Validating the trust of the certificate chain may be complicated, and this field
    should only be populated by tools that actively check the status.'
  type: boolean
dll.code_signature.valid:
  description: 'Boolean to capture if the digital signature is verified against the
    binary content.

    Leave unpopulated if a certificate was unchecked.'
  type: boolean
dll.compile_time:
  description: TODO
  type: date
dll.hash.md5:
  description: MD5 hash.
  type: keyword
dll.hash.sha1:
  description: SHA1 hash.
  type: keyword
dll.hash.sha256:
  description: SHA256 hash.
  type: keyword
dll.hash.sha512:
  description: SHA512 hash.
  type: keyword
dll.malware_classifier.features.data.buffer:
  description: TODO
  type: keyword
dll.malware_classifier.features.data.decompressed_size:
  description: TODO
  type: integer
dll.malware_classifier.features.data.encoding:
  description: TODO
  type: keyword
dll.malware_classifier.identifier:
  description: TODO
  type: keyword
dll.malware_classifier.score:
  description: TODO
  type: double
dll.malware_classifier.threshold:
  description: TODO
  type: double
dll.malware_classifier.upx_packed:
  description: TODO
  type: boolean
dll.malware_classifier.version:
  description: TODO
  type: keyword
dll.mapped_address:
  description: TODO
  type: keyword
dll.mapped_size:
  description: TODO
  type: long
dll.name:
  description: 'Name of the library.

    This generally maps to the name of the file on disk.'
  type: keyword
dll.path:
  description: Full file path of the library.
  type: keyword
dll.pe.company:
  description: Internal company name of the file, provided at compile-time.
  type: keyword
dll.pe.description:
  description: Internal description of the file, provided at compile-time.
  type: keyword
dll.pe.file_version:
  description: Internal version of the file, provided at compile-time.
  type: keyword
dll.pe.original_file_name:
  description: Internal name of the file, provided at compile-time.
  type: keyword
dll.pe.product:
  description: Internal product name of the file, provided at compile-time.
  type: keyword
ecs.version:
  description: 'ECS version this event conforms to. `ecs.version` is a required field
    and must exist in all events.

    When querying across multiple indices -- which may conform to slightly different
    ECS versions -- this field lets integrations adjust to the schema version of the
    events.'
  type: keyword
endpoint.artifact.hash:
  description: Hash of artifact in use by endpoint when event was created.
  type: keyword
endpoint.artifact.name:
  description: Name of artifact in use by endpoint when event was created.
  type: keyword
endpoint.artifact.version:
  description: Version of artifact in use by endpoint when event was created.
  type: keyword
endpoint.policy.id:
  description: TODO
  type: keyword
event.action:
  description: 'The action captured by the event.

    This describes the information in the event. It is more specific than `event.category`.
    Examples are `group-add`, `process-started`, `file-created`. The value is normally
    defined by the implementer.'
  type: keyword
event.category:
  description: 'This is one of four ECS Categorization Fields, and indicates the second
    level in the ECS category hierarchy.

    `event.category` represents the "big buckets" of ECS categories. For example,
    filtering on `event.category:process` yields all events relating to process activity.
    This field is closely related to `event.type`, which is used as a subcategory.

    This field is an array. This will allow proper categorization of some events that
    fall in multiple categories.'
  type: keyword
event.created:
  description: 'event.created contains the date/time when the event was first read
    by an agent, or by your pipeline.

    This field is distinct from @timestamp in that @timestamp typically contain the
    time extracted from the original event.

    In most situations, these two timestamps will be slightly different. The difference
    can be used to calculate the delay between your source generating an event, and
    the time when your agent first processed it. This can be used to monitor your
    agent''s or pipeline''s ability to keep up with your event source.

    In case the two timestamps are identical, @timestamp should be used.'
  type: date
event.dataset:
  description: 'Name of the dataset.

    If an event source publishes more than one type of log or events (e.g. access
    log, error log), the dataset is used to specify which one the event comes from.

    It''s recommended but not required to start the dataset name with the module name,
    followed by a dot, then the dataset name.'
  type: keyword
event.hash:
  description: Hash (perhaps logstash fingerprint) of raw field to be able to demonstrate
    log integrity.
  type: keyword
event.id:
  description: Unique ID to describe the event.
  type: keyword
event.ingested:
  description: 'Timestamp when an event arrived in the central data store.

    This is different from `@timestamp`, which is when the event originally occurred.  It''s
    also different from `event.created`, which is meant to capture the first time
    an agent saw the event.

    In normal conditions, assuming no tampering, the timestamps should chronologically
    look like this: `@timestamp` < `event.created` < `event.ingested`.'
  type: date
event.kind:
  description: 'This is one of four ECS Categorization Fields, and indicates the highest
    level in the ECS category hierarchy.

    `event.kind` gives high-level information about what type of information the event
    contains, without being specific to the contents of the event. For example, values
    of this field distinguish alert events from metric events.

    The value of this field can be used to inform how these kinds of events should
    be handled. They may warrant different retention, different access control, it
    may also help understand whether the data coming in at a regular interval or not.'
  type: keyword
event.module:
  description: 'Name of the module this data is coming from.

    If your monitoring agent supports the concept of modules or plugins to process
    events of a given source (e.g. Apache logs), `event.module` should contain the
    name of this module.'
  type: keyword
event.outcome:
  description: 'This is one of four ECS Categorization Fields, and indicates the lowest
    level in the ECS category hierarchy.

    `event.outcome` simply denotes whether the event represent a success or a failure.
    Note that not all events will have an associated outcome. For example, this field
    is generally not populated for metric events or events with `event.type:info`.'
  type: keyword
event.sequence:
  description: 'Sequence number of the event.

    The sequence number is a value published by some event sources, to make the exact
    ordering of events unambiguous, regardless of the timestamp precision.'
  type: long
event.type:
  description: 'This is one of four ECS Categorization Fields, and indicates the third
    level in the ECS category hierarchy.

    `event.type` represents a categorization "sub-bucket" that, when used along with
    the `event.category` field values, enables filtering events down to a level appropriate
    for single visualization.

    This field is an array. This will allow proper categorization of some events that
    fall in multiple event types.'
  type: keyword
file.accessed:
  description: 'Last time the file was accessed.

    Note that not all filesystems keep track of access time.'
  type: date
file.attributes:
  description: 'Array of file attributes.

    Attributes names will vary by platform. Here''s a non-exhaustive list of values
    that are expected in this field: archive, compressed, directory, encrypted, execute,
    hidden, read, readonly, system, write.'
  type: keyword
file.code_signature.exists:
  description: Boolean to capture if a signature is present.
  type: boolean
file.code_signature.status:
  description: 'Additional information about the certificate status.

    This is useful for logging cryptographic errors with the certificate validity
    or trust status. Leave unpopulated if the validity or trust of the certificate
    was unchecked.'
  type: keyword
file.code_signature.subject_name:
  description: Subject name of the code signer
  type: keyword
file.code_signature.trusted:
  description: 'Stores the trust status of the certificate chain.

    Validating the trust of the certificate chain may be complicated, and this field
    should only be populated by tools that actively check the status.'
  type: boolean
file.code_signature.valid:
  description: 'Boolean to capture if the digital signature is verified against the
    binary content.

    Leave unpopulated if a certificate was unchecked.'
  type: boolean
file.created:
  description: 'File creation time.

    Note that not all filesystems store the creation time.'
  type: date
file.ctime:
  description: 'Last time the file attributes or metadata changed.

    Note that changes to the file content will update `mtime`. This implies `ctime`
    will be adjusted at the same time, since `mtime` is an attribute of the file.'
  type: date
file.device:
  description: Device that is the source of the file.
  type: keyword
file.directory:
  description: Directory where the file is located. It should include the drive letter,
    when appropriate.
  type: keyword
file.drive_letter:
  description: 'Drive letter where the file is located. This field is only relevant
    on Windows.

    The value should be uppercase, and not include the colon.'
  type: keyword
file.entry_modified:
  description: TODO
  type: double
file.extension:
  description: File extension.
  type: keyword
file.gid:
  description: Primary group ID (GID) of the file.
  type: keyword
file.group:
  description: Primary group name of the file.
  type: keyword
file.hash.md5:
  description: MD5 hash.
  type: keyword
file.hash.sha1:
  description: SHA1 hash.
  type: keyword
file.hash.sha256:
  description: SHA256 hash.
  type: keyword
file.hash.sha512:
  description: SHA512 hash.
  type: keyword
file.inode:
  description: Inode representing the file in the filesystem.
  type: keyword
file.macro.code_page:
  description: TODO
  type: long
file.macro.collection:
  description: TODO
  type: object
file.macro.collection.hash.md5:
  description: MD5 hash.
  type: keyword
file.macro.collection.hash.sha1:
  description: SHA1 hash.
  type: keyword
file.macro.collection.hash.sha256:
  description: SHA256 hash.
  type: keyword
file.macro.collection.hash.sha512:
  description: SHA512 hash.
  type: keyword
file.macro.errors:
  description: TODO
  type: nested
file.macro.errors.count:
  description: TODO
  type: long
file.macro.errors.error_type:
  description: TODO
  type: keyword
file.macro.file_extension:
  description: TODO
  type: long
file.macro.project_file:
  description: TODO
  type: object
file.macro.project_file.hash.md5:
  description: MD5 hash.
  type: keyword
file.macro.project_file.hash.sha1:
  description: SHA1 hash.
  type: keyword
file.macro.project_file.hash.sha256:
  description: SHA256 hash.
  type: keyword
file.macro.project_file.hash.sha512:
  description: SHA512 hash.
  type: keyword
file.macro.stream:
  description: TODO
  type: nested
file.macro.stream.hash.md5:
  description: MD5 hash.
  type: keyword
file.macro.stream.hash.sha1:
  description: SHA1 hash.
  type: keyword
file.macro.stream.hash.sha256:
  description: SHA256 hash.
  type: keyword
file.macro.stream.hash.sha512:
  description: SHA512 hash.
  type: keyword
file.macro.stream.name:
  description: TODO
  type: keyword
file.macro.stream.raw_code:
  description: TODO
  type: keyword
file.macro.stream.raw_code_size:
  description: TODO
  type: keyword
file.malware_classifier.features.data.buffer:
  description: TODO
  type: keyword
file.malware_classifier.features.data.decompressed_size:
  description: TODO
  type: integer
file.malware_classifier.features.data.encoding:
  description: TODO
  type: keyword
file.malware_classifier.identifier:
  description: TODO
  type: keyword
file.malware_classifier.score:
  description: TODO
  type: double
file.malware_classifier.threshold:
  description: TODO
  type: double
file.malware_classifier.upx_packed:
  description: TODO
  type: boolean
file.malware_classifier.version:
  description: TODO
  type: keyword
file.mode:
  description: Mode of the file in octal representation.
  type: keyword
file.mtime:
  description: Last time the file content was modified.
  type: date
file.name:
  description: Name of the file including the extension, without the directory.
  type: keyword
file.owner:
  description: File owner's username.
  type: keyword
file.path:
  description: Full path to the file, including the file name. It should include the
    drive letter, when appropriate.
  type: keyword
file.pe.company:
  description: Internal company name of the file, provided at compile-time.
  type: keyword
file.pe.description:
  description: Internal description of the file, provided at compile-time.
  type: keyword
file.pe.file_version:
  description: Internal version of the file, provided at compile-time.
  type: keyword
file.pe.original_file_name:
  description: Internal name of the file, provided at compile-time.
  type: keyword
file.pe.product:
  description: Internal product name of the file, provided at compile-time.
  type: keyword
file.size:
  description: 'File size in bytes.

    Only relevant when `file.type` is "file".'
  type: long
file.target_path:
  description: Target path for symlinks.
  type: keyword
file.temp_file_path:
  description: TODO
  type: keyword
file.type:
  description: File type (file, dir, or symlink).
  type: keyword
file.uid:
  description: The user ID (UID) or security identifier (SID) of the file owner.
  type: keyword
host.architecture:
  description: Operating system architecture.
  type: keyword
host.domain:
  description: 'Name of the domain of which the host is a member.

    For example, on Windows this could be the host''s Active Directory domain or NetBIOS
    domain name. For Linux this could be the domain of the host''s LDAP provider.'
  type: keyword
host.geo.city_name:
  description: City name.
  type: keyword
host.geo.continent_name:
  description: Name of the continent.
  type: keyword
host.geo.country_iso_code:
  description: Country ISO code.
  type: keyword
host.geo.country_name:
  description: Country name.
  type: keyword
host.geo.location:
  description: Longitude and latitude.
  type: geo_point
host.geo.name:
  description: 'User-defined description of a location, at the level of granularity
    they care about.

    Could be the name of their data centers, the floor number, if this describes a
    local physical entity, city names.

    Not typically used in automated geolocation.'
  type: keyword
host.geo.region_iso_code:
  description: Region ISO code.
  type: keyword
host.geo.region_name:
  description: Region name.
  type: keyword
host.hostname:
  description: 'Hostname of the host.

    It normally contains what the `hostname` command returns on the host machine.'
  type: keyword
host.id:
  description: 'Unique host id.

    As hostname is not always unique, use values that are meaningful in your environment.

    Example: The current usage of `beat.name`.'
  type: keyword
host.ip:
  description: Host ip addresses.
  type: ip
host.mac:
  description: Host mac addresses.
  type: keyword
host.name:
  description: 'Name of the host.

    It can contain what `hostname` returns on Unix systems, the fully qualified domain
    name, or a name specified by the user. The sender decides which value to use.'
  type: keyword
host.os.family:
  description: OS family (such as redhat, debian, freebsd, windows).
  type: keyword
host.os.full:
  description: Operating system name, including the version or code name.
  type: keyword
host.os.kernel:
  description: Operating system kernel version as a raw string.
  type: keyword
host.os.name:
  description: Operating system name, without the version.
  type: keyword
host.os.platform:
  description: Operating system platform (such centos, ubuntu, windows).
  type: keyword
host.os.version:
  description: Operating system version as a raw string.
  type: keyword
host.type:
  description: 'Type of host.

    For Cloud providers this can be the machine type like `t2.medium`. If vm, this
    could be the container, for example, or other information meaningful in your environment.'
  type: keyword
host.uptime:
  description: Seconds the host has been up.
  type: long
host.user.domain:
  description: 'Name of the directory the user is a member of.

    For example, an LDAP or Active Directory domain name.'
  type: keyword
host.user.email:
  description: User email address.
  type: keyword
host.user.full_name:
  description: User's full name, if available.
  type: keyword
host.user.group.domain:
  description: 'Name of the directory the group is a member of.

    For example, an LDAP or Active Directory domain name.'
  type: keyword
host.user.group.id:
  description: Unique identifier for the group on the system/platform.
  type: keyword
host.user.group.name:
  description: Name of the group.
  type: keyword
host.user.hash:
  description: 'Unique user hash to correlate information for a user in anonymized
    form.

    Useful if `user.id` or `user.name` contain confidential information and cannot
    be used.'
  type: keyword
host.user.id:
  description: Unique identifiers of the user.
  type: keyword
host.user.name:
  description: Short name or login of the user.
  type: keyword
process.args:
  description: 'Array of process arguments, starting with the absolute path to the
    executable.

    May be filtered to protect sensitive information.'
  type: keyword
process.args_count:
  description: 'Length of the process.args array.

    This field can be useful for querying or performing bucket analysis on how many
    arguments were provided to start a process. More arguments may be an indication
    of suspicious activity.'
  type: long
process.code_signature.exists:
  description: Boolean to capture if a signature is present.
  type: boolean
process.code_signature.status:
  description: 'Additional information about the certificate status.

    This is useful for logging cryptographic errors with the certificate validity
    or trust status. Leave unpopulated if the validity or trust of the certificate
    was unchecked.'
  type: keyword
process.code_signature.subject_name:
  description: Subject name of the code signer
  type: keyword
process.code_signature.trusted:
  description: 'Stores the trust status of the certificate chain.

    Validating the trust of the certificate chain may be complicated, and this field
    should only be populated by tools that actively check the status.'
  type: boolean
process.code_signature.valid:
  description: 'Boolean to capture if the digital signature is verified against the
    binary content.

    Leave unpopulated if a certificate was unchecked.'
  type: boolean
process.command_line:
  description: 'Full command line that started the process, including the absolute
    path to the executable, and all arguments.

    Some arguments may be filtered to protect sensitive information.'
  type: keyword
process.cpu_percent:
  description: TODO
  type: double
process.cwd:
  description: TODO
  type: keyword
process.domain:
  description: TODO
  type: keyword
process.entity_id:
  description: 'Unique identifier for the process.

    The implementation of this is specified by the data source, but some examples
    of what could be used here are a process-generated UUID, Sysmon Process GUIDs,
    or a hash of some uniquely identifying components of a process.

    Constructing a globally unique identifier is a common practice to mitigate PID
    reuse as well as to identify a specific process over time, across multiple monitored
    hosts.'
  type: keyword
process.env_variables:
  description: TODO
  type: keyword
process.executable:
  description: Absolute path to the process executable.
  type: keyword
process.exit_code:
  description: 'The exit code of the process, if this is a termination event.

    The field should be absent if there is no exit code for the event (e.g. process
    start).'
  type: long
process.group:
  description: TODO
  type: keyword
process.handles:
  description: TODO
  type: nested
process.handles.id:
  description: TODO
  type: long
process.handles.name:
  description: TODO
  type: keyword
process.handles.type:
  description: TODO
  type: keyword
process.hash.md5:
  description: MD5 hash.
  type: keyword
process.hash.sha1:
  description: SHA1 hash.
  type: keyword
process.hash.sha256:
  description: SHA256 hash.
  type: keyword
process.hash.sha512:
  description: SHA512 hash.
  type: keyword
process.malware_classifier.features.data.buffer:
  description: TODO
  type: keyword
process.malware_classifier.features.data.decompressed_size:
  description: TODO
  type: integer
process.malware_classifier.features.data.encoding:
  description: TODO
  type: keyword
process.malware_classifier.identifier:
  description: TODO
  type: keyword
process.malware_classifier.score:
  description: TODO
  type: double
process.malware_classifier.threshold:
  description: TODO
  type: double
process.malware_classifier.upx_packed:
  description: TODO
  type: boolean
process.malware_classifier.version:
  description: TODO
  type: keyword
process.memory_percent:
  description: TODO
  type: double
process.memory_region:
  description: TODO
  type: nested
process.memory_region.allocation_base:
  description: TODO
  type: keyword
process.memory_region.allocation_protection:
  description: TODO
  type: keyword
process.memory_region.bytes:
  description: TODO
  type: keyword
process.memory_region.histogram:
  description: TODO
  type: nested
process.memory_region.histogram.histogram_array:
  description: TODO
  type: keyword
process.memory_region.histogram.histogram_flavor:
  description: TODO
  type: keyword
process.memory_region.histogram.histogram_resolution:
  description: TODO
  type: keyword
process.memory_region.length:
  description: TODO
  type: keyword
process.memory_region.memory:
  description: TODO
  type: keyword
process.memory_region.memory_address:
  description: TODO
  type: keyword
process.memory_region.module_path:
  description: TODO
  type: keyword
process.memory_region.permission:
  description: TODO
  type: keyword
process.memory_region.protection:
  description: TODO
  type: keyword
process.memory_region.region_base:
  description: TODO
  type: keyword
process.memory_region.region_size:
  description: TODO
  type: keyword
process.memory_region.region_tag:
  description: TODO
  type: keyword
process.memory_region.type:
  description: TODO
  type: keyword
process.memory_region.unbacked_on_disk:
  description: TODO
  type: boolean
process.name:
  description: 'Process name.

    Sometimes called program name or similar.'
  type: keyword
process.num_threads:
  description: TODO
  type: long
process.parent.args:
  description: 'Array of process arguments.

    May be filtered to protect sensitive information.'
  type: keyword
process.parent.args_count:
  description: 'Length of the process.args array.

    This field can be useful for querying or performing bucket analysis on how many
    arguments were provided to start a process. More arguments may be an indication
    of suspicious activity.'
  type: long
process.parent.code_signature.exists:
  description: Boolean to capture if a signature is present.
  type: boolean
process.parent.code_signature.status:
  description: 'Additional information about the certificate status.

    This is useful for logging cryptographic errors with the certificate validity
    or trust status. Leave unpopulated if the validity or trust of the certificate
    was unchecked.'
  type: keyword
process.parent.code_signature.subject_name:
  description: Subject name of the code signer
  type: keyword
process.parent.code_signature.trusted:
  description: 'Stores the trust status of the certificate chain.

    Validating the trust of the certificate chain may be complicated, and this field
    should only be populated by tools that actively check the status.'
  type: boolean
process.parent.code_signature.valid:
  description: 'Boolean to capture if the digital signature is verified against the
    binary content.

    Leave unpopulated if a certificate was unchecked.'
  type: boolean
process.parent.command_line:
  description: 'Full command line that started the process, including the absolute
    path to the executable, and all arguments.

    Some arguments may be filtered to protect sensitive information.'
  type: keyword
process.parent.entity_id:
  description: 'Unique identifier for the process.

    The implementation of this is specified by the data source, but some examples
    of what could be used here are a process-generated UUID, Sysmon Process GUIDs,
    or a hash of some uniquely identifying components of a process.

    Constructing a globally unique identifier is a common practice to mitigate PID
    reuse as well as to identify a specific process over time, across multiple monitored
    hosts.'
  type: keyword
process.parent.executable:
  description: Absolute path to the process executable.
  type: keyword
process.parent.exit_code:
  description: 'The exit code of the process, if this is a termination event.

    The field should be absent if there is no exit code for the event (e.g. process
    start).'
  type: long
process.parent.hash.md5:
  description: MD5 hash.
  type: keyword
process.parent.hash.sha1:
  description: SHA1 hash.
  type: keyword
process.parent.hash.sha256:
  description: SHA256 hash.
  type: keyword
process.parent.hash.sha512:
  description: SHA512 hash.
  type: keyword
process.parent.name:
  description: 'Process name.

    Sometimes called program name or similar.'
  type: keyword
process.parent.pgid:
  description: Identifier of the group of processes the process belongs to.
  type: long
process.parent.pid:
  description: Process id.
  type: long
process.parent.ppid:
  description: Parent process' pid.
  type: long
process.parent.start:
  description: The time the process started.
  type: date
process.parent.thread.id:
  description: Thread ID.
  type: long
process.parent.thread.name:
  description: Thread name.
  type: keyword
process.parent.title:
  description: 'Process title.

    The proctitle, some times the same as process name. Can also be different: for
    example a browser setting its title to the web page currently opened.'
  type: keyword
process.parent.uptime:
  description: Seconds the process has been up.
  type: long
process.parent.working_directory:
  description: The working directory of the process.
  type: keyword
process.pe.company:
  description: Internal company name of the file, provided at compile-time.
  type: keyword
process.pe.description:
  description: Internal description of the file, provided at compile-time.
  type: keyword
process.pe.file_version:
  description: Internal version of the file, provided at compile-time.
  type: keyword
process.pe.original_file_name:
  description: Internal name of the file, provided at compile-time.
  type: keyword
process.pe.product:
  description: Internal product name of the file, provided at compile-time.
  type: keyword
process.pgid:
  description: Identifier of the group of processes the process belongs to.
  type: long
process.phys_memory_bytes:
  description: TODO
  type: keyword
process.pid:
  description: Process id.
  type: long
process.ppid:
  description: Parent process' pid.
  type: long
process.services:
  description: TODO
  type: keyword
process.session_id:
  description: TODO
  type: long
process.short_name:
  description: TODO
  type: keyword
process.sid:
  description: TODO
  type: keyword
process.start:
  description: The time the process started.
  type: date
process.thread.call_stack.instruction_pointer:
  description: TODO
  type: keyword
process.thread.call_stack.memory_section.memory_address:
  description: TODO
  type: keyword
process.thread.call_stack.memory_section.memory_size:
  description: TODO
  type: keyword
process.thread.call_stack.memory_section.protection:
  description: TODO
  type: keyword
process.thread.call_stack.module_path:
  description: TODO
  type: keyword
process.thread.call_stack.rva:
  description: TODO
  type: keyword
process.thread.call_stack.symbol_info:
  description: TODO
  type: keyword
process.thread.entrypoint:
  description: TODO
  type: keyword
process.thread.service:
  description: Service associated with the thread.
  type: keyword
process.thread.start:
  description: The time the thread started.
  type: date
process.thread.start_address:
  description: Memory address where the thread started.
  type: keyword
process.thread.start_address_module:
  description: TODO
  type: keyword
process.thread.token.domain:
  description: TODO
  type: keyword
process.thread.token.impersonation_level:
  description: Impersonation level. Only valid for impersonation tokens.
  type: keyword
process.thread.token.integrity_level:
  description: Numeric integrity level.
  type: long
process.thread.token.integrity_level_name:
  description: Human readable integrity level.
  type: keyword
process.thread.token.is_appcontainer:
  description: Whether or not this is an appcontainer token.
  type: boolean
process.thread.token.privileges:
  description: Array describing the privileges associated with the token.
  type: nested
process.thread.token.privileges.description:
  description: Description of the privilege.
  type: keyword
process.thread.token.privileges.enabled:
  description: Whether or not the privilege is enabled.
  type: boolean
process.thread.token.privileges.name:
  description: Name of the privilege.
  type: keyword
process.thread.token.sid:
  description: TODO
  type: keyword
process.thread.token.type:
  description: Type of the token, either primary or impersonation.
  type: keyword
process.thread.token.user:
  description: Username of token owner.
  type: keyword
process.thread.uptime:
  description: Seconds since thread started.
  type: long
process.title:
  description: 'Process title.

    The proctitle, some times the same as process name. Can also be different: for
    example a browser setting its title to the web page currently opened.'
  type: keyword
process.token.domain:
  description: TODO
  type: keyword
process.token.impersonation_level:
  description: Impersonation level. Only valid for impersonation tokens.
  type: keyword
process.token.integrity_level:
  description: Numeric integrity level.
  type: long
process.token.integrity_level_name:
  description: Human readable integrity level.
  type: keyword
process.token.is_appcontainer:
  description: Whether or not this is an appcontainer token.
  type: boolean
process.token.privileges:
  description: Array describing the privileges associated with the token.
  type: nested
process.token.privileges.description:
  description: Description of the privilege.
  type: keyword
process.token.privileges.enabled:
  description: Whether or not the privilege is enabled.
  type: boolean
process.token.privileges.name:
  description: Name of the privilege.
  type: keyword
process.token.sid:
  description: TODO
  type: keyword
process.token.type:
  description: Type of the token, either primary or impersonation.
  type: keyword
process.token.user:
  description: Username of token owner.
  type: keyword
process.tty_device.major_number:
  description: TODO
  type: integer
process.tty_device.minor_number:
  description: TODO
  type: integer
process.tty_device.name:
  description: TODO
  type: keyword
process.uptime:
  description: Seconds the process has been up.
  type: long
process.user:
  description: TODO
  type: keyword
process.virt_memory_bytes:
  description: TODO
  type: keyword
process.working_directory:
  description: The working directory of the process.
  type: keyword
rule.category:
  description: A categorization value keyword used by the entity using the rule for
    detection of this event.
  type: keyword
rule.description:
  description: The description of the rule generating the event.
  type: keyword
rule.id:
  description: A rule ID that is unique within the scope of an agent, observer, or
    other entity using the rule for detection of this event.
  type: keyword
rule.name:
  description: The name of the rule or signature generating the event.
  type: keyword
rule.reference:
  description: 'Reference URL to additional information about the rule used to generate
    this event.

    The URL can point to the vendor''s documentation about the rule. If that''s not
    available, it can also be a link to a more general page describing this type of
    alert.'
  type: keyword
rule.ruleset:
  description: Name of the ruleset, policy, group, or parent category in which the
    rule used to generate this event is a member.
  type: keyword
rule.uuid:
  description: A rule ID that is unique within the scope of a set or group of agents,
    observers, or other entities using the rule for detection of this event.
  type: keyword
rule.version:
  description: The version / revision of the rule being used for analysis.
  type: keyword
target.dll.code_signature.exists:
  description: Boolean to capture if a signature is present.
  type: boolean
target.dll.code_signature.status:
  description: 'Additional information about the certificate status.

    This is useful for logging cryptographic errors with the certificate validity
    or trust status. Leave unpopulated if the validity or trust of the certificate
    was unchecked.'
  type: keyword
target.dll.code_signature.subject_name:
  description: Subject name of the code signer
  type: keyword
target.dll.code_signature.trusted:
  description: 'Stores the trust status of the certificate chain.

    Validating the trust of the certificate chain may be complicated, and this field
    should only be populated by tools that actively check the status.'
  type: boolean
target.dll.code_signature.valid:
  description: 'Boolean to capture if the digital signature is verified against the
    binary content.

    Leave unpopulated if a certificate was unchecked.'
  type: boolean
target.dll.compile_time:
  description: TODO
  type: date
target.dll.hash.md5:
  description: MD5 hash.
  type: keyword
target.dll.hash.sha1:
  description: SHA1 hash.
  type: keyword
target.dll.hash.sha256:
  description: SHA256 hash.
  type: keyword
target.dll.hash.sha512:
  description: SHA512 hash.
  type: keyword
target.dll.malware_classifier.features.data.buffer:
  description: TODO
  type: keyword
target.dll.malware_classifier.features.data.decompressed_size:
  description: TODO
  type: integer
target.dll.malware_classifier.features.data.encoding:
  description: TODO
  type: keyword
target.dll.malware_classifier.identifier:
  description: TODO
  type: keyword
target.dll.malware_classifier.score:
  description: TODO
  type: double
target.dll.malware_classifier.threshold:
  description: TODO
  type: double
target.dll.malware_classifier.upx_packed:
  description: TODO
  type: boolean
target.dll.malware_classifier.version:
  description: TODO
  type: keyword
target.dll.mapped_address:
  description: TODO
  type: keyword
target.dll.mapped_size:
  description: TODO
  type: long
target.dll.name:
  description: 'Name of the library.

    This generally maps to the name of the file on disk.'
  type: keyword
target.dll.path:
  description: Full file path of the library.
  type: keyword
target.dll.pe.company:
  description: Internal company name of the file, provided at compile-time.
  type: keyword
target.dll.pe.description:
  description: Internal description of the file, provided at compile-time.
  type: keyword
target.dll.pe.file_version:
  description: Internal version of the file, provided at compile-time.
  type: keyword
target.dll.pe.original_file_name:
  description: Internal name of the file, provided at compile-time.
  type: keyword
target.dll.pe.product:
  description: Internal product name of the file, provided at compile-time.
  type: keyword
target.process.args:
  description: 'Array of process arguments, starting with the absolute path to the
    executable.

    May be filtered to protect sensitive information.'
  type: keyword
target.process.args_count:
  description: 'Length of the process.args array.

    This field can be useful for querying or performing bucket analysis on how many
    arguments were provided to start a process. More arguments may be an indication
    of suspicious activity.'
  type: long
target.process.code_signature.exists:
  description: Boolean to capture if a signature is present.
  type: boolean
target.process.code_signature.status:
  description: 'Additional information about the certificate status.

    This is useful for logging cryptographic errors with the certificate validity
    or trust status. Leave unpopulated if the validity or trust of the certificate
    was unchecked.'
  type: keyword
target.process.code_signature.subject_name:
  description: Subject name of the code signer
  type: keyword
target.process.code_signature.trusted:
  description: 'Stores the trust status of the certificate chain.

    Validating the trust of the certificate chain may be complicated, and this field
    should only be populated by tools that actively check the status.'
  type: boolean
target.process.code_signature.valid:
  description: 'Boolean to capture if the digital signature is verified against the
    binary content.

    Leave unpopulated if a certificate was unchecked.'
  type: boolean
target.process.command_line:
  description: 'Full command line that started the process, including the absolute
    path to the executable, and all arguments.

    Some arguments may be filtered to protect sensitive information.'
  type: keyword
target.process.cpu_percent:
  description: TODO
  type: double
target.process.cwd:
  description: TODO
  type: keyword
target.process.domain:
  description: TODO
  type: keyword
target.process.entity_id:
  description: 'Unique identifier for the process.

    The implementation of this is specified by the data source, but some examples
    of what could be used here are a process-generated UUID, Sysmon Process GUIDs,
    or a hash of some uniquely identifying components of a process.

    Constructing a globally unique identifier is a common practice to mitigate PID
    reuse as well as to identify a specific process over time, across multiple monitored
    hosts.'
  type: keyword
target.process.env_variables:
  description: TODO
  type: keyword
target.process.executable:
  description: Absolute path to the process executable.
  type: keyword
target.process.exit_code:
  description: 'The exit code of the process, if this is a termination event.

    The field should be absent if there is no exit code for the event (e.g. process
    start).'
  type: long
target.process.group:
  description: TODO
  type: keyword
target.process.handles:
  description: TODO
  type: nested
target.process.handles.id:
  description: TODO
  type: long
target.process.handles.name:
  description: TODO
  type: keyword
target.process.handles.type:
  description: TODO
  type: keyword
target.process.hash.md5:
  description: MD5 hash.
  type: keyword
target.process.hash.sha1:
  description: SHA1 hash.
  type: keyword
target.process.hash.sha256:
  description: SHA256 hash.
  type: keyword
target.process.hash.sha512:
  description: SHA512 hash.
  type: keyword
target.process.malware_classifier.features.data.buffer:
  description: TODO
  type: keyword
target.process.malware_classifier.features.data.decompressed_size:
  description: TODO
  type: integer
target.process.malware_classifier.features.data.encoding:
  description: TODO
  type: keyword
target.process.malware_classifier.identifier:
  description: TODO
  type: keyword
target.process.malware_classifier.score:
  description: TODO
  type: double
target.process.malware_classifier.threshold:
  description: TODO
  type: double
target.process.malware_classifier.upx_packed:
  description: TODO
  type: boolean
target.process.malware_classifier.version:
  description: TODO
  type: keyword
target.process.memory_percent:
  description: TODO
  type: double
target.process.memory_region:
  description: TODO
  type: nested
target.process.memory_region.allocation_base:
  description: TODO
  type: keyword
target.process.memory_region.allocation_protection:
  description: TODO
  type: keyword
target.process.memory_region.bytes:
  description: TODO
  type: keyword
target.process.memory_region.histogram:
  description: TODO
  type: nested
target.process.memory_region.histogram.histogram_array:
  description: TODO
  type: keyword
target.process.memory_region.histogram.histogram_flavor:
  description: TODO
  type: keyword
target.process.memory_region.histogram.histogram_resolution:
  description: TODO
  type: keyword
target.process.memory_region.length:
  description: TODO
  type: keyword
target.process.memory_region.memory:
  description: TODO
  type: keyword
target.process.memory_region.memory_address:
  description: TODO
  type: keyword
target.process.memory_region.module_path:
  description: TODO
  type: keyword
target.process.memory_region.permission:
  description: TODO
  type: keyword
target.process.memory_region.protection:
  description: TODO
  type: keyword
target.process.memory_region.region_base:
  description: TODO
  type: keyword
target.process.memory_region.region_size:
  description: TODO
  type: keyword
target.process.memory_region.region_tag:
  description: TODO
  type: keyword
target.process.memory_region.type:
  description: TODO
  type: keyword
target.process.memory_region.unbacked_on_disk:
  description: TODO
  type: boolean
target.process.name:
  description: 'Process name.

    Sometimes called program name or similar.'
  type: keyword
target.process.num_threads:
  description: TODO
  type: long
target.process.parent.args:
  description: 'Array of process arguments.

    May be filtered to protect sensitive information.'
  type: keyword
target.process.parent.args_count:
  description: 'Length of the process.args array.

    This field can be useful for querying or performing bucket analysis on how many
    arguments were provided to start a process. More arguments may be an indication
    of suspicious activity.'
  type: long
target.process.parent.code_signature.exists:
  description: Boolean to capture if a signature is present.
  type: boolean
target.process.parent.code_signature.status:
  description: 'Additional information about the certificate status.

    This is useful for logging cryptographic errors with the certificate validity
    or trust status. Leave unpopulated if the validity or trust of the certificate
    was unchecked.'
  type: keyword
target.process.parent.code_signature.subject_name:
  description: Subject name of the code signer
  type: keyword
target.process.parent.code_signature.trusted:
  description: 'Stores the trust status of the certificate chain.

    Validating the trust of the certificate chain may be complicated, and this field
    should only be populated by tools that actively check the status.'
  type: boolean
target.process.parent.code_signature.valid:
  description: 'Boolean to capture if the digital signature is verified against the
    binary content.

    Leave unpopulated if a certificate was unchecked.'
  type: boolean
target.process.parent.command_line:
  description: 'Full command line that started the process, including the absolute
    path to the executable, and all arguments.

    Some arguments may be filtered to protect sensitive information.'
  type: keyword
target.process.parent.entity_id:
  description: 'Unique identifier for the process.

    The implementation of this is specified by the data source, but some examples
    of what could be used here are a process-generated UUID, Sysmon Process GUIDs,
    or a hash of some uniquely identifying components of a process.

    Constructing a globally unique identifier is a common practice to mitigate PID
    reuse as well as to identify a specific process over time, across multiple monitored
    hosts.'
  type: keyword
target.process.parent.executable:
  description: Absolute path to the process executable.
  type: keyword
target.process.parent.exit_code:
  description: 'The exit code of the process, if this is a termination event.

    The field should be absent if there is no exit code for the event (e.g. process
    start).'
  type: long
target.process.parent.hash.md5:
  description: MD5 hash.
  type: keyword
target.process.parent.hash.sha1:
  description: SHA1 hash.
  type: keyword
target.process.parent.hash.sha256:
  description: SHA256 hash.
  type: keyword
target.process.parent.hash.sha512:
  description: SHA512 hash.
  type: keyword
target.process.parent.name:
  description: 'Process name.

    Sometimes called program name or similar.'
  type: keyword
target.process.parent.pgid:
  description: Identifier of the group of processes the process belongs to.
  type: long
target.process.parent.pid:
  description: Process id.
  type: long
target.process.parent.ppid:
  description: Parent process' pid.
  type: long
target.process.parent.start:
  description: The time the process started.
  type: date
target.process.parent.thread.id:
  description: Thread ID.
  type: long
target.process.parent.thread.name:
  description: Thread name.
  type: keyword
target.process.parent.title:
  description: 'Process title.

    The proctitle, some times the same as process name. Can also be different: for
    example a browser setting its title to the web page currently opened.'
  type: keyword
target.process.parent.uptime:
  description: Seconds the process has been up.
  type: long
target.process.parent.working_directory:
  description: The working directory of the process.
  type: keyword
target.process.pe.company:
  description: Internal company name of the file, provided at compile-time.
  type: keyword
target.process.pe.description:
  description: Internal description of the file, provided at compile-time.
  type: keyword
target.process.pe.file_version:
  description: Internal version of the file, provided at compile-time.
  type: keyword
target.process.pe.original_file_name:
  description: Internal name of the file, provided at compile-time.
  type: keyword
target.process.pe.product:
  description: Internal product name of the file, provided at compile-time.
  type: keyword
target.process.pgid:
  description: Identifier of the group of processes the process belongs to.
  type: long
target.process.phys_memory_bytes:
  description: TODO
  type: keyword
target.process.pid:
  description: Process id.
  type: long
target.process.ppid:
  description: Parent process' pid.
  type: long
target.process.services:
  description: TODO
  type: keyword
target.process.session_id:
  description: TODO
  type: long
target.process.short_name:
  description: TODO
  type: keyword
target.process.sid:
  description: TODO
  type: keyword
target.process.start:
  description: The time the process started.
  type: date
target.process.thread.call_stack.instruction_pointer:
  description: TODO
  type: keyword
target.process.thread.call_stack.memory_section.memory_address:
  description: TODO
  type: keyword
target.process.thread.call_stack.memory_section.memory_size:
  description: TODO
  type: keyword
target.process.thread.call_stack.memory_section.protection:
  description: TODO
  type: keyword
target.process.thread.call_stack.module_path:
  description: TODO
  type: keyword
target.process.thread.call_stack.rva:
  description: TODO
  type: keyword
target.process.thread.call_stack.symbol_info:
  description: TODO
  type: keyword
target.process.thread.entrypoint:
  description: TODO
  type: keyword
target.process.thread.service:
  description: Service associated with the thread.
  type: keyword
target.process.thread.start:
  description: The time the thread started.
  type: date
target.process.thread.start_address:
  description: Memory address where the thread started.
  type: keyword
target.process.thread.start_address_module:
  description: TODO
  type: keyword
target.process.thread.token.domain:
  description: TODO
  type: keyword
target.process.thread.token.impersonation_level:
  description: Impersonation level. Only valid for impersonation tokens.
  type: keyword
target.process.thread.token.integrity_level:
  description: Numeric integrity level.
  type: long
target.process.thread.token.integrity_level_name:
  description: Human readable integrity level.
  type: keyword
target.process.thread.token.is_appcontainer:
  description: Whether or not this is an appcontainer token.
  type: boolean
target.process.thread.token.privileges:
  description: Array describing the privileges associated with the token.
  type: nested
target.process.thread.token.privileges.description:
  description: Description of the privilege.
  type: keyword
target.process.thread.token.privileges.enabled:
  description: Whether or not the privilege is enabled.
  type: boolean
target.process.thread.token.privileges.name:
  description: Name of the privilege.
  type: keyword
target.process.thread.token.sid:
  description: TODO
  type: keyword
target.process.thread.token.type:
  description: Type of the token, either primary or impersonation.
  type: keyword
target.process.thread.token.user:
  description: Username of token owner.
  type: keyword
target.process.thread.uptime:
  description: Seconds since thread started.
  type: long
target.process.title:
  description: 'Process title.

    The proctitle, some times the same as process name. Can also be different: for
    example a browser setting its title to the web page currently opened.'
  type: keyword
target.process.token.domain:
  description: TODO
  type: keyword
target.process.token.impersonation_level:
  description: Impersonation level. Only valid for impersonation tokens.
  type: keyword
target.process.token.integrity_level:
  description: Numeric integrity level.
  type: long
target.process.token.integrity_level_name:
  description: Human readable integrity level.
  type: keyword
target.process.token.is_appcontainer:
  description: Whether or not this is an appcontainer token.
  type: boolean
target.process.token.privileges:
  description: Array describing the privileges associated with the token.
  type: nested
target.process.token.privileges.description:
  description: Description of the privilege.
  type: keyword
target.process.token.privileges.enabled:
  description: Whether or not the privilege is enabled.
  type: boolean
target.process.token.privileges.name:
  description: Name of the privilege.
  type: keyword
target.process.token.sid:
  description: TODO
  type: keyword
target.process.token.type:
  description: Type of the token, either primary or impersonation.
  type: keyword
target.process.token.user:
  description: Username of token owner.
  type: keyword
target.process.tty_device.major_number:
  description: TODO
  type: integer
target.process.tty_device.minor_number:
  description: TODO
  type: integer
target.process.tty_device.name:
  description: TODO
  type: keyword
target.process.uptime:
  description: Seconds the process has been up.
  type: long
target.process.user:
  description: TODO
  type: keyword
target.process.virt_memory_bytes:
  description: TODO
  type: keyword
target.process.working_directory:
  description: The working directory of the process.
  type: keyword
target.thread:
  description: Thread.
  type: object
threat.framework:
  description: Name of the threat framework used to further categorize and classify
    the tactic and technique of the reported threat. Framework classification can
    be provided by detecting systems, evaluated at ingest time, or retrospectively
    tagged to events.
  type: keyword
threat.tactic.id:
  description: The id of tactic used by this threat. You can use the Mitre ATT&CK
    Matrix Tactic categorization, for example. (ex. https://attack.mitre.org/tactics/TA0040/
    )
  type: keyword
threat.tactic.name:
  description: Name of the type of tactic used by this threat. You can use the Mitre
    ATT&CK Matrix Tactic categorization, for example. (ex. https://attack.mitre.org/tactics/TA0040/
    )
  type: keyword
threat.tactic.reference:
  description: The reference url of tactic used by this threat. You can use the Mitre
    ATT&CK Matrix Tactic categorization, for example. (ex. https://attack.mitre.org/tactics/TA0040/
    )
  type: keyword
threat.technique.id:
  description: The id of technique used by this tactic. You can use the Mitre ATT&CK
    Matrix Tactic categorization, for example. (ex. https://attack.mitre.org/techniques/T1499/
    )
  type: keyword
threat.technique.name:
  description: The name of technique used by this tactic. You can use the Mitre ATT&CK
    Matrix Tactic categorization, for example. (ex. https://attack.mitre.org/techniques/T1499/
    )
  type: keyword
threat.technique.reference:
  description: The reference url of technique used by this tactic. You can use the
    Mitre ATT&CK Matrix Tactic categorization, for example. (ex. https://attack.mitre.org/techniques/T1499/
    )
  type: keyword
user.domain:
  description: 'Name of the directory the user is a member of.

    For example, an LDAP or Active Directory domain name.'
  type: keyword
user.email:
  description: User email address.
  type: keyword
user.full_name:
  description: User's full name, if available.
  type: keyword
user.group.domain:
  description: 'Name of the directory the group is a member of.

    For example, an LDAP or Active Directory domain name.'
  type: keyword
user.group.id:
  description: Unique identifier for the group on the system/platform.
  type: keyword
user.group.name:
  description: Name of the group.
  type: keyword
user.hash:
  description: 'Unique user hash to correlate information for a user in anonymized
    form.

    Useful if `user.id` or `user.name` contain confidential information and cannot
    be used.'
  type: keyword
user.id:
  description: Unique identifiers of the user.
  type: keyword
user.name:
  description: Short name or login of the user.
  type: keyword
